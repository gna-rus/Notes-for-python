# Свойства можно реализовать через декораторы, но надо обьявить property (который выступает в качестве геттера)
# и отдельно обьявить сеттер и делеттер (если надо). См код
# В рамках одного класса может быть несколько @property и у каждого будет свой сеттер и делейтер

class Cat:
    def __init__(self, name):
        self._name = name
        self.age = 10

    @property
    def name(self):                  # первое свойство name, доступное только для чтения
        return self._name

    @name.setter
    def set_name(self, name):        # второе свойство set_name, доступное для чтения и записи
        self._name = name

    @name.deleter
    def del_name(self):              # третье свойство del_name, доступное для чтения и удаления
        del self._name


cat = Cat('Кемаль')

print(cat.name)
cat.set_name = "Барсик"
print(cat.name)
print(cat.__dir__())
del cat.age
print(cat.__dir__())
cat.del_name
print(cat.name)
