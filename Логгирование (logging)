import logging
# это код отдельного файла (other.py) который инициализирует логгирование
logger = logging.getLogger(__name__)
def log_all():
    logger.debug('Очень подробная отладочная информация. Заменяем множество "принтов"')
    logger.info('Немного информации о работе кода')
    logger.warning('Внимание! Надвигается буря!')
    logger.error('Поймали ошибку. Дальше только неизвестность')
    logger.critical('На этом всё')

############################################################################

# это основной код
import logging
from other import log_all # импортирую код для логгирования из другого файла

FORMAT = '{levelname:<8} - {asctime}. В модуле "{name}" в строке {lineno:03d} функция "{funcName}()" в {created} секунд записала сообщение: {msg}'
# levelname:<8 - выравнивание по левому краю (8 знаков)
# asctime - время в которое произошло событие
# name - имя модуля в котором произошло событие
# lineno - номер строки в которой произошло событие
# funcName - имя функции внутри которой произошло событие
# created - время в которое произошло событие в секундах
# msg - сообщение которое передается внутри скобок

logging.basicConfig(format=FORMAT, style='{',filename='project.log.', filemode='w', encoding='utf-8', level=logging.INFO) # сохранаяю результаты лоиггирования в отдельный файл
# format = -формат записи
# style = - стиль для спец параметров (эти параметры будут заключены в них)
logging.basicConfig(level=logging.WARNING) # присвоение уровня логгера
logger = logging.getLogger('Основной файл проекта-1') # название логгера
logger.warning('Внимание! Используем вызов функции из другого модуля')
log_all()
